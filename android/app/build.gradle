plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def environment = "PROD"

def getGitBranchName() {
    def branch = ''
    try {
        def process = "git rev-parse --abbrev-ref HEAD".execute()
        branch = process.text.trim()
        branch = branch.replace('/', '-')
    } catch (ignored) {
        println "Não foi possível obter o nome da branch do Git."
    }
    return branch
}

android {
    namespace = "br.com.cepfinder.cep_finder"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def appName = "Cep Finder"
            def version = variant.versionName
            def variantName = variant.name
            def branchName = getGitBranchName()
            def date = new Date().format("dd-MM-yyyy-HH-mm-ss")
            def newApkName = "${appName}-version-${version}_${environment}-${variantName}-branch-${branchName}_${date}.apk"
            output.outputFileName = newApkName
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "br.com.cepfinder.cep_finder"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
